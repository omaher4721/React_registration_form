{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\RD_sd-form\\\\Frontend\\\\sd-form\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Button.css\";\nimport PersonalInfo from \"./components/PersonalInfo\";\nimport Address from \"./components/Address\";\nimport EducationalInfo from \"./components/EducationalInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    personalInfo: {\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      email: \"\",\n      mobileNo: \"\",\n      gender: \"\",\n      degree: \"\",\n      dob: \"\",\n      hasDisable: \"\"\n    },\n    address: {\n      presentAddress: \"\",\n      streetAddress: \"\",\n      streetAddressLineTwo: \"\",\n      city: \"\",\n      state: \"\",\n      zipCode: \"\",\n      country: \"\"\n    },\n    educationalInfo: {\n      hscSchoolName: \"\",\n      hscMarks: \"\",\n      sscSchoolName: \"\",\n      sscMarks: \"\",\n      ugCollegeName: \"\",\n      ugMarks: \"\",\n      familyIncome: \"\",\n      hasScholarship: false,\n      isPhysicallyDisabled: false\n    }\n  });\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [submitButtonText, setSubmitButtonText] = useState(\"Submit All Data\");\n  const handleFormData = (data, componentName) => {\n    setFormData(prevData => ({\n      ...prevData,\n      [componentName]: data\n    }));\n  };\n  const handleFinalSubmit = async () => {\n    const requiredFieldsPersonalInfo = ['firstName', 'lastName', 'email', 'mobileNo'];\n    const requiredFieldsAddress = ['presentAddress', 'city', 'state', 'zipCode', 'country'];\n    const requiredFieldsEducationalInfo = ['hscSchoolName', 'sscSchoolName', 'ugCollegeName'];\n    const {\n      personalInfo,\n      address,\n      educationalInfo\n    } = formData;\n    const isPersonalInfoFilled = requiredFieldsPersonalInfo.every(field => !!personalInfo[field].trim());\n    const isAddressFilled = requiredFieldsAddress.every(field => !!address[field].trim());\n    const isEducationalInfoFilled = requiredFieldsEducationalInfo.every(field => !!educationalInfo[field].trim());\n    if (!isPersonalInfoFilled || !isAddressFilled || !isEducationalInfoFilled) {\n      alert(\"Please fill in all required fields!\");\n      return;\n    }\n    if (!termsAccepted) {\n      alert(\"Please accept the terms and conditions!\");\n      return;\n    }\n\n    // Rest of your submission logic remains unchanged\n\n    try {\n      const response = await fetch('/api/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          formData\n        })\n      });\n      if (response.ok) {\n        console.log('Data successfully sent to the server');\n        setSubmitButtonText(\"Your request has been submitted. Thank you!\");\n      } else {\n        console.error('Failed to send data to the server');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(PersonalInfo, {\n      onSubmit: data => handleFormData(data, \"personalInfo\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Address, {\n      onSubmit: data => handleFormData(data, \"address\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EducationalInfo, {\n      onSubmit: data => handleFormData(data, \"educationalInfo\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"s-btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox-label\",\n        htmlFor: \"termsCheckbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"termsCheckbox\",\n          type: \"checkbox\",\n          checked: termsAccepted,\n          onChange: handleTermsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"custom-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkbox-text\",\n          children: \"Accept Terms and Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinalSubmit,\n        children: submitButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Wy5kyEMrYKYuzJzSdQ0XvYTKubU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PersonalInfo","Address","EducationalInfo","jsxDEV","_jsxDEV","App","_s","formData","setFormData","personalInfo","firstName","middleName","lastName","email","mobileNo","gender","degree","dob","hasDisable","address","presentAddress","streetAddress","streetAddressLineTwo","city","state","zipCode","country","educationalInfo","hscSchoolName","hscMarks","sscSchoolName","sscMarks","ugCollegeName","ugMarks","familyIncome","hasScholarship","isPhysicallyDisabled","termsAccepted","setTermsAccepted","submitButtonText","setSubmitButtonText","handleFormData","data","componentName","prevData","handleFinalSubmit","requiredFieldsPersonalInfo","requiredFieldsAddress","requiredFieldsEducationalInfo","isPersonalInfoFilled","every","field","trim","isAddressFilled","isEducationalInfoFilled","alert","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","checked","onChange","handleTermsChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/RD_sd-form/Frontend/sd-form/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Button.css\";\nimport PersonalInfo from \"./components/PersonalInfo\";\nimport Address from \"./components/Address\";\nimport EducationalInfo from \"./components/EducationalInfo\";\n\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    personalInfo: {\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      email: \"\",\n      mobileNo: \"\",\n      gender: \"\",\n      degree: \"\",\n      dob: \"\",\n      hasDisable: \"\",\n    },\n    address: {\n      presentAddress: \"\",\n      streetAddress: \"\",\n      streetAddressLineTwo: \"\",\n      city: \"\",\n      state: \"\",\n      zipCode: \"\",\n      country: \"\",\n    },\n    educationalInfo: {\n      hscSchoolName: \"\",\n      hscMarks: \"\",\n      sscSchoolName: \"\",\n      sscMarks: \"\",\n      ugCollegeName: \"\",\n      ugMarks: \"\",\n      familyIncome: \"\",\n      hasScholarship: false,\n      isPhysicallyDisabled: false,\n    },\n  });\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [submitButtonText, setSubmitButtonText] = useState(\"Submit All Data\");\n\n\n  const handleFormData = (data, componentName) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      [componentName]: data,\n    \n    }));\n  };\n  \n\n  const handleFinalSubmit = async () => {\n    const requiredFieldsPersonalInfo = ['firstName', 'lastName', 'email', 'mobileNo'];\n    const requiredFieldsAddress = ['presentAddress', 'city', 'state', 'zipCode', 'country'];\n    const requiredFieldsEducationalInfo = ['hscSchoolName', 'sscSchoolName', 'ugCollegeName'];\n  \n    const { personalInfo, address, educationalInfo } = formData;\n  \n    const isPersonalInfoFilled = requiredFieldsPersonalInfo.every(field => !!personalInfo[field].trim());\n    const isAddressFilled = requiredFieldsAddress.every(field => !!address[field].trim());\n    const isEducationalInfoFilled = requiredFieldsEducationalInfo.every(field => !!educationalInfo[field].trim());\n  \n    if (!isPersonalInfoFilled || !isAddressFilled || !isEducationalInfoFilled) {\n      alert(\"Please fill in all required fields!\");\n      return;\n    }\n  \n    if (!termsAccepted) {\n      alert(\"Please accept the terms and conditions!\");\n      return;\n    }\n  \n    // Rest of your submission logic remains unchanged\n\n  \n    try {\n      const response = await fetch('/api/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ formData }),\n      });\n  \n      if (response.ok) {\n        console.log('Data successfully sent to the server');\n        setSubmitButtonText(\"Your request has been submitted. Thank you!\");\n      } else {\n        console.error('Failed to send data to the server');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n\n  };\n\n  \n  return (\n    <div className=\"app\">\n      <PersonalInfo onSubmit={(data) => handleFormData(data, \"personalInfo\")} />\n      <Address onSubmit={(data) => handleFormData(data, \"address\")} />\n      <EducationalInfo\n        onSubmit={(data) => handleFormData(data, \"educationalInfo\")}\n      />\n      <div className=\"s-btn\">\n        <label className=\"checkbox-label\" htmlFor=\"termsCheckbox\">\n          <input\n            id=\"termsCheckbox\"\n            type=\"checkbox\"\n            checked={termsAccepted}\n            onChange={handleTermsChange}\n          />\n          <span className=\"custom-checkbox\"></span>\n          <span className=\"checkbox-text\">Accept Terms and Conditions</span>\n        </label>\n        <button onClick={handleFinalSubmit}>{submitButtonText}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}