{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\sd-form\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PersonalInfo from './components/PersonalInfo';\nimport Address from './components/Address';\nimport EducationalInfo from './components/EducationalInfo';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [studentId, setStudentId] = useState(null);\n  useEffect(() => {\n    // This effect will run after studentId changes\n    console.log('Student ID changed:', studentId);\n\n    // If you need to perform additional actions after studentId changes,\n    // you can do it here\n    // Example: handleAddressSubmit({ /* address data */ });\n  }, [studentId]);\n  const handlePersonalInfoSubmit = data => {\n    axios.post('http://localhost:3001/api/personalInfo', data).then(response => {\n      console.log('PersonalInfo submitted successfully:', response.data);\n      setStudentId(response.data.student_id);\n    }).catch(error => {\n      console.error('Error submitting PersonalInfo:', error);\n    });\n  };\n  const handleAddressSubmit = data => {\n    if (studentId) {\n      // Attach the student_id obtained from PersonalInfo submission to the address data\n      data.student_id = studentId;\n      axios.post('http://localhost:3001/api/address', data).then(response => {\n        console.log('Address information submitted successfully:', response.data);\n      }).catch(error => {\n        console.error('Error submitting Address information:', error);\n      });\n    } else {\n      console.error('Student ID is not available. PersonalInfo must be submitted first.');\n    }\n  };\n  const handleEducationalInfoSubmit = data => {\n    if (studentId) {\n      // Attach the student_id obtained from PersonalInfo submission to the educationalInfo data\n      data.student_id = studentId;\n      axios.post('http://localhost:3001/api/educationalInfo', data).then(response => {\n        console.log('EducationalInfo submitted successfully:', response.data);\n      }).catch(error => {\n        console.error('Error submitting EducationalInfo:', error);\n      });\n    } else {\n      console.error('Student ID is not available. PersonalInfo must be submitted first.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(PersonalInfo, {\n      onSubmit: handlePersonalInfoSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cNChWggwbcCqWa371IErupMR+eY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PersonalInfo","Address","EducationalInfo","axios","jsxDEV","_jsxDEV","App","_s","studentId","setStudentId","console","log","handlePersonalInfoSubmit","data","post","then","response","student_id","catch","error","handleAddressSubmit","handleEducationalInfoSubmit","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/sd-form/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PersonalInfo from './components/PersonalInfo';\nimport Address from './components/Address';\nimport EducationalInfo from './components/EducationalInfo';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n  const [studentId, setStudentId] = useState(null);\n\n  useEffect(() => {\n    // This effect will run after studentId changes\n    console.log('Student ID changed:', studentId);\n\n    // If you need to perform additional actions after studentId changes,\n    // you can do it here\n    // Example: handleAddressSubmit({ /* address data */ });\n  }, [studentId]);\n\n  const handlePersonalInfoSubmit = (data) => {\n    axios.post('http://localhost:3001/api/personalInfo', data)\n      .then(response => {\n        console.log('PersonalInfo submitted successfully:', response.data);\n        setStudentId(response.data.student_id);\n      })\n      .catch(error => {\n        console.error('Error submitting PersonalInfo:', error);\n      });\n  };\n\n  const handleAddressSubmit = (data) => {\n    if (studentId) {\n      // Attach the student_id obtained from PersonalInfo submission to the address data\n      data.student_id = studentId;\n\n      axios.post('http://localhost:3001/api/address', data)\n        .then(response => {\n          console.log('Address information submitted successfully:', response.data);\n        })\n        .catch(error => {\n          console.error('Error submitting Address information:', error);\n        });\n    } else {\n      console.error('Student ID is not available. PersonalInfo must be submitted first.');\n    }\n  };\n\n  const handleEducationalInfoSubmit = (data) => {\n    if (studentId) {\n      // Attach the student_id obtained from PersonalInfo submission to the educationalInfo data\n      data.student_id = studentId;\n\n      axios.post('http://localhost:3001/api/educationalInfo', data)\n        .then(response => {\n          console.log('EducationalInfo submitted successfully:', response.data);\n        })\n        .catch(error => {\n          console.error('Error submitting EducationalInfo:', error);\n        });\n    } else {\n      console.error('Student ID is not available. PersonalInfo must be submitted first.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <PersonalInfo onSubmit={handlePersonalInfoSubmit} />\n      {/* Other components and forms */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAW,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,SAAS,CAAC;;IAE7C;IACA;IACA;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMI,wBAAwB,GAAIC,IAAI,IAAK;IACzCV,KAAK,CAACW,IAAI,CAAC,wCAAwC,EAAED,IAAI,CAAC,CACvDE,IAAI,CAACC,QAAQ,IAAI;MAChBN,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEK,QAAQ,CAACH,IAAI,CAAC;MAClEJ,YAAY,CAACO,QAAQ,CAACH,IAAI,CAACI,UAAU,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdT,OAAO,CAACS,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,mBAAmB,GAAIP,IAAI,IAAK;IACpC,IAAIL,SAAS,EAAE;MACb;MACAK,IAAI,CAACI,UAAU,GAAGT,SAAS;MAE3BL,KAAK,CAACW,IAAI,CAAC,mCAAmC,EAAED,IAAI,CAAC,CAClDE,IAAI,CAACC,QAAQ,IAAI;QAChBN,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEK,QAAQ,CAACH,IAAI,CAAC;MAC3E,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;QACdT,OAAO,CAACS,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;IACN,CAAC,MAAM;MACLT,OAAO,CAACS,KAAK,CAAC,oEAAoE,CAAC;IACrF;EACF,CAAC;EAED,MAAME,2BAA2B,GAAIR,IAAI,IAAK;IAC5C,IAAIL,SAAS,EAAE;MACb;MACAK,IAAI,CAACI,UAAU,GAAGT,SAAS;MAE3BL,KAAK,CAACW,IAAI,CAAC,2CAA2C,EAAED,IAAI,CAAC,CAC1DE,IAAI,CAACC,QAAQ,IAAI;QAChBN,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEK,QAAQ,CAACH,IAAI,CAAC;MACvE,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;QACdT,OAAO,CAACS,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,CAAC;IACN,CAAC,MAAM;MACLT,OAAO,CAACS,KAAK,CAAC,oEAAoE,CAAC;IACrF;EACF,CAAC;EAED,oBACEd,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA,CAACL,YAAY;MAACwB,QAAQ,EAAEZ;IAAyB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjD,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/DID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAiET,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}